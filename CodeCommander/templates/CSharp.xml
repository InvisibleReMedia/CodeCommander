<root><legendes /><infos><creationDate>26/08/2012 15:23:17</creationDate><modificationDate>26/08/2012 15:44:06</modificationDate><revision>2</revision></infos><code><template path="/C#" name="ImplWriteFileForText"><legendes/><params><param>create</param></params><code><beginprocess>ImplWriteFileForText</beginprocess><texte>public·static·void·WriteFileForText(string·fileName)·{
·····using(StreamWriter·sw·=·new·StreamWriter(fileName))·{
·······</texte><handler name="write" /><texte>
·······sw.Close();
·····}
}</texte><endprocess>ImplWriteFileForText</endprocess><call>ImplWriteFileForText</call></code></template><template path="/C#" name="UseWriteFileForText"><legendes/><params><param>fileName</param></params><code><beginprocess>UseWriteFileForText</beginprocess><texte>WriteFileForText(</texte><variable>$fileName</variable><texte>);</texte><endprocess>UseWriteFileForText</endprocess><call>UseWriteFileForText</call></code></template><template path="/C#" name="ImplReadFileOfText"><legendes/><params /><code><beginprocess>ImplReadFileOfText</beginprocess><texte>public·static·void·ReadFileOfText(string·fileName)·{
····using(StreamReader·sr·=·new·StreamReader(fileName))·{
·······</texte><handler name="read" /><texte>
·······sr.Close();
····}
}</texte><endprocess>ImplReadFileOfText</endprocess><call>ImplReadFileOfText</call></code></template><template path="/C#" name="UseReadFileOfText"><legendes/><params><param>fileName</param></params><code><beginprocess>UseReadFileOfText</beginprocess><texte>ReadFileOfText(</texte><variable>$fileName</variable><texte>);</texte><endprocess>UseReadFileOfText</endprocess><call>UseReadFileOfText</call></code></template><template path="/C#" name="ConstructFileName"><legendes/><params><param>volume</param><param>directory</param><param>name</param><param>extension</param><param>separator</param><param>out</param></params><code><beginprocess>ConstructFileName</beginprocess><affectation><variable>volume</variable><expression>$volume</expression></affectation><affectation><variable>directory</variable><expression>$directory</expression></affectation><affectation><variable>name</variable><expression>$name</expression></affectation><affectation><variable>extension</variable><expression>$extension</expression></affectation><texte>$out·=·"</texte><variable>volume</variable><variable>$separator</variable><variable>directory</variable><variable>$separator</variable><variable>name</variable><texte>.</texte><variable>extension</variable><texte>";</texte><endprocess>ConstructFileName</endprocess><call>ConstructFileName</call><affectation><variable>$out</variable><expression>$out</expression></affectation></code></template><template path="/C#" name="WindowsPathSeparator"><legendes/><params><param>out</param></params><code><affectation><variable>$out</variable><expression>\\</expression></affectation></code></template></code></root>